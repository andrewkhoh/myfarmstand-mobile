{
  "name": "myfarmstand-mobile",
  "version": "1.0.0",
  "main": "index.ts",
  "scripts": {
    "start": "expo start --clear",
    "android": "expo run:android",
    "ios": "expo run:ios",
    "web": "expo start --web",
    "test": "jest",
    "test:marketing": "jest --config=jest/jest.config.marketing.js --forceExit",
    "test:inventory": "npm run test:inventory:services && npm run test:inventory:hooks",
    "test:executive": "jest src/hooks/executive src/services/executive src/schemas/executive --passWithNoTests",
    "test:role-based": "jest src/hooks/role-based src/services/role --passWithNoTests",
    "test:integration": "jest src/integration --passWithNoTests",
    "test:schemas": "jest src/schemas --passWithNoTests",
    "test:features": "npm run test:marketing && npm run test:inventory && npm run test:executive",
    "test:quick": "jest src/hooks/marketing/__tests__/marketing-hooks.test.tsx src/hooks/inventory/__tests__/inventory-hooks.test.tsx src/hooks/executive/__tests__/executive-hooks.test.tsx --passWithNoTests",
    "test:fix": "npm run test:schemas && npm run test:quick",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:hooks": "jest --config jest/jest.config.hooks.regular.js src/hooks/__tests__/ --forceExit",
    "test:hooks:watch": "jest --config jest/jest.config.hooks.regular.js --watch src/hooks/__tests__/",
    "test:hooks:race": "jest --config jest/jest.config.hooks.race.js src/hooks/__tests__/ --forceExit",
    "test:hooks:race:watch": "jest --config jest/jest.config.hooks.race.js --watch src/hooks/__tests__/",
    "test:race:cart": "jest --config jest/jest.config.hooks.race.js src/hooks/__tests__/useCart.race.test.tsx --forceExit",
    "test:race:orders": "jest --config jest/jest.config.hooks.race.js src/hooks/__tests__/useOrders.race.test.tsx --forceExit",
    "test:race:realtime": "jest --config jest/jest.config.hooks.race.js src/hooks/__tests__/useCentralizedRealtime.race.test.tsx --forceExit",
    "test:race:auth": "jest --config jest/jest.config.hooks.race.js src/hooks/__tests__/useAuth.race.test.tsx --forceExit",
    "test:race:stock": "jest --config jest/jest.config.hooks.race.js src/hooks/__tests__/useStockValidation.race.test.tsx --forceExit",
    "test:race:notifications": "jest --config jest/jest.config.hooks.race.js src/hooks/__tests__/useNotifications.race.test.tsx --forceExit",
    "test:race:products": "jest --config jest/jest.config.hooks.race.js src/hooks/__tests__/useProducts.race.test.tsx --forceExit",
    "test:race:pickup": "jest --config jest/jest.config.hooks.race.js src/hooks/__tests__/usePickupRescheduling.race.test.tsx --forceExit",
    "test:race:payment": "jest --config jest/jest.config.hooks.race.js src/hooks/__tests__/usePayment.race.test.tsx --forceExit",
    "test:race:core": "npm run test:race:cart && npm run test:race:orders && npm run test:race:realtime && npm run test:race:auth && npm run test:race:stock && npm run test:race:notifications && npm run test:race:products && npm run test:race:pickup && npm run test:race:payment",
    "test:services": "TEST_TYPE=services jest --config jest/jest.config.services.js src/services/",
    "test:services:watch": "TEST_TYPE=services jest --config jest/jest.config.services.js --watch src/services/",
    "test:realdb": "TEST_TYPE=realdb jest --config jest/jest.config.realdb.js --forceExit",
    "test:realdb:watch": "TEST_TYPE=realdb jest --config jest/jest.config.realdb.js --watch",
    "test:navigation": "npx jest --config=jest/jest.config.navigation.js --forceExit",
    "test:navigation:watch": "npx jest --config=jest/jest.config.navigation.js --watch",
    "test:screens:role": "jest --config=jest/jest.config.screens.js --testPathPattern=role-based --forceExit",
    "test:integration:role": "jest --config=jest/jest.config.integration.role.js --forceExit",
    "test:components:role": "jest --config=jest/jest.config.components.js --testPathPattern=role-based --forceExit",
    "test:all:role": "npm run test:navigation && npm run test:screens:role && npm run test:integration:role",
    "test:payment": "jest src/__tests__/payment-integration.test.ts --forceExit",
    "test:payment:watch": "jest --watch src/__tests__/payment-integration.test.ts",
    "test:all": "npm run test:services && npm run test:hooks && npm run test:payment",
    "test:checkout": "jest CheckoutScreen",
    "test:confirmation": "jest OrderConfirmationScreen",
    "db:safety": "node scripts/database-safety.js check",
    "db:archive": "node scripts/database-safety.js archive",
    "db:scan": "node scripts/database-safety.js scan",
    "validate:integrations": "node scripts/validate-integrations.js",
    "prebuild:validate": "npm run validate:integrations && node scripts/pre-build-validation.js",
    "prebuild:production": "npm run validate:integrations && node scripts/pre-build-validation.js --archive",
    "build:development": "npm run prebuild:validate && eas build --profile development",
    "build:staging": "npm run prebuild:production && eas build --profile staging",
    "build:production": "npm run prebuild:production && eas build --profile production",
    "build:preview": "npm run prebuild:validate && eas build --profile preview",
    "secrets:validate": "node scripts/secrets-validator.js",
    "secrets:audit": "node scripts/secrets-validator.js --audit",
    "secrets:bundle-scan": "node scripts/secrets-validator.js --scan-bundle",
    "audit-and-fix": "ts-node automation/workflow-runner.ts",
    "audit-services": "ts-node automation/audit-services.ts",
    "validate-schemas": "ts-node automation/schema-validator.ts",
    "generate-fixes": "ts-node automation/pattern-fixer.ts",
    "apply-fixes": "ts-node automation/pattern-fixer.ts --apply",
    "generate-tests": "ts-node automation/test-generator.ts",
    "quick-audit": "ts-node automation/workflow-runner.ts quick",
    "full-automation": "ts-node automation/workflow-runner.ts full",
    "audit-only": "ts-node automation/workflow-runner.ts audit",
    "fix-only": "ts-node automation/workflow-runner.ts fix",
    "sync-schema": "node scripts/sync-supabase-schema.js",
    "generate-types": "node scripts/generate-types.js",
    "build": "expo build",
    "lint": "eslint . --ext .ts,.tsx,.js,.jsx || echo 'ESLint not configured - install @typescript-eslint/eslint-plugin for linting'",
    "lint:schemas": "node scripts/validate-schema-patterns.js",
    "lint:schemas:verbose": "node scripts/validate-schema-patterns.js --verbose",
    "test:contracts": "tsc --noEmit src/schemas/__contracts__/schema-contracts.test.ts",
    "test:contracts:watch": "tsc --noEmit --watch src/schemas/__contracts__/schema-contracts.test.ts",
    "test:contracts:all": "tsc --noEmit src/schemas/__contracts__/*.ts",
    "validate:all": "npm run test:contracts && npm run lint:schemas",
    "validate:all:verbose": "npm run test:contracts && npm run lint:schemas:verbose",
    "validate:pre-commit": "npm run test:contracts && npm run lint:schemas && npm run test:inventory && echo 'âœ… Pre-commit validation passed'",
    "contracts:validate": "node -e \"const {validateContracts} = require('./src/schemas/__contracts__/inventory.contracts.ts'); process.exit(validateContracts() ? 0 : 1);\"",
    "validate:debug": "npm run test:contracts:all && npm run lint:schemas:verbose",
    "validate:admin": "node scripts/validate-admin-contracts.js",
    "validate:admin:verbose": "node scripts/validate-admin-contracts.js --verbose",
    "schema:check": "npm run validate:all",
    "schema:fix": "echo 'Run schema:check first to identify issues, then fix manually'",
    "typecheck": "tsc --noEmit",
    "test:performance": "jest --config=jest/jest.config.performance.js --forceExit",
    "test:performance:queries": "jest --config=jest/jest.config.performance.js src/__tests__/performance/queryPerformance.test.ts --forceExit",
    "test:performance:frontend": "jest --config=jest/jest.config.performance.js src/__tests__/performance/frontendPerformance.test.ts --forceExit",
    "test:security": "jest --config=jest/jest.config.security.js --forceExit",
    "test:security:audit": "jest --config=jest/jest.config.security.js src/__tests__/security/securityAudit.test.ts --forceExit",
    "test:security:permissions": "jest --config=jest/jest.config.security.js src/__tests__/security/permissionBoundaries.test.ts --forceExit",
    "test:integration:e2e": "jest --config=jest/jest.config.e2e.js --forceExit",
    "test:integration:analytics": "jest --config=jest/jest.config.integration.js src/__tests__/integration/analyticsIntegration.test.ts --forceExit",
    "test:production": "npm run test:performance && npm run test:security && npm run test:integration:e2e",
    "test:components:executive": "jest -c jest/jest.config.components.executive.js --forceExit",
    "test:hooks:executive": "jest -c jest/jest.config.hooks.executive.js --forceExit",
    "test:screens:executive": "jest -c jest/jest.config.screens.executive.js --forceExit",
    "test:integration:cross-role": "jest -c jest/jest.config.integration.cross-role.js --forceExit",
    "test:decision": "jest -c jest/jest.config.decision.js --forceExit",
    "test:executive:all": "npm run test:components:executive && npm run test:hooks:executive && npm run test:screens:executive && npm run test:integration:cross-role && npm run test:decision",
    "test:inventory:services": "jest --config=jest/jest.config.inventory.services.js --forceExit",
    "test:inventory:ts": "jest --config=jest/jest.config.inventory.ts.js --forceExit",
    "test:inventory:hooks": "jest --config=jest/jest.config.inventory-hooks.js --forceExit",
    "test:inventory:watch": "jest --config=jest/jest.config.inventory.js --watch",
    "test:marketing:services": "jest --config=jest/jest.config.marketing.js src/services/marketing --forceExit",
    "test:marketing:hooks": "jest --config=jest/jest.config.marketing.js src/hooks/marketing --forceExit",
    "test:marketing:watch": "jest --config=jest/jest.config.marketing.js --watch",
    "migration:validate": "echo 'Database migration validation - implement based on your migration system'",
    "performance:benchmark": "npm run test:performance",
    "security:audit": "npm run test:security",
    "deploy:production": "echo 'Production deployment - implement based on your deployment system'",
    "health:check": "echo 'Health check - implement based on your health check system'"
  },
  "dependencies": {
    "@expo/metro-runtime": "~5.0.4",
    "@expo/vector-icons": "^14.1.0",
    "@react-native-async-storage/async-storage": "^2.1.2",
    "@react-native-community/datetimepicker": "^8.4.1",
    "@react-navigation/bottom-tabs": "^7.4.4",
    "@react-navigation/drawer": "^7.5.5",
    "@react-navigation/native": "^7.1.16",
    "@react-navigation/native-stack": "^7.3.26",
    "@react-navigation/stack": "^7.4.4",
    "@shopify/react-native-skia": "^2.2.16",
    "@supabase/supabase-js": "^2.53.0",
    "@tanstack/react-query": "^5.84.1",
    "@tanstack/react-query-devtools": "^5.84.1",
    "crypto-js": "^4.2.0",
    "expo": "^53.0.22",
    "expo-barcode-scanner": "~13.0.1",
    "expo-camera": "~16.1.11",
    "expo-crypto": "^15.0.7",
    "expo-font": "~13.3.2",
    "expo-secure-store": "~14.2.4",
    "expo-status-bar": "~2.2.3",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "react-native": "0.79.5",
    "react-native-gesture-handler": "~2.24.0",
    "react-native-get-random-values": "^1.11.0",
    "react-native-modal-datetime-picker": "^18.0.0",
    "react-native-qrcode-svg": "^6.3.15",
    "react-native-reanimated": "~3.17.4",
    "react-native-safe-area-context": "^5.4.0",
    "react-native-screens": "~4.11.1",
    "react-native-svg": "^15.13.0",
    "react-native-vector-icons": "^10.3.0",
    "react-native-web": "^0.20.0",
    "victory-native": "^41.20.1",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@babel/core": "^7.25.2",
    "@jest/environment": "^30.0.5",
    "@testing-library/dom": "^10.4.1",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/jest-native": "^5.4.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/react-native": "^13.2.2",
    "@types/crypto-js": "^4.2.2",
    "@types/jest": "^30.0.0",
    "@types/node": "^24.2.1",
    "@types/react": "~19.0.10",
    "@types/react-native-vector-icons": "^6.4.18",
    "@types/uuid": "^10.0.0",
    "babel-preset-expo": "~13.0.0",
    "cssom": "^0.5.0",
    "cssstyle": "^5.2.1",
    "hermes-parser": "^0.32.0",
    "identity-obj-proxy": "^3.0.0",
    "jest": "~29.7.0",
    "jest-expo": "~53.0.10",
    "react-test-renderer": "^19.0.0",
    "source-map": "^0.7.6",
    "ts-jest": "^29.4.3",
    "ts-node": "^10.9.2",
    "typescript": "~5.8.3"
  },
  "private": true
}
