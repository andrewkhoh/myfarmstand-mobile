{"numFailedTestSuites":2,"numFailedTests":10,"numPassedTestSuites":4,"numPassedTests":112,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":6,"numTotalTests":122,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1756381241974,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["RoleBasedButton Component","Basic Functionality"],"duration":839,"failureDetails":[],"failureMessages":[],"fullName":"RoleBasedButton Component Basic Functionality should render button with correct title","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should render button with correct title"},{"ancestorTitles":["RoleBasedButton Component","Basic Functionality"],"duration":16,"failureDetails":[],"failureMessages":[],"fullName":"RoleBasedButton Component Basic Functionality should call onPress when user has permission","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should call onPress when user has permission"},{"ancestorTitles":["RoleBasedButton Component","Basic Functionality"],"duration":1034,"failureDetails":[{"matcherResult":{"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined\n    at Object.<anonymous> (/workspace/src/components/role-based/__tests__/RoleBasedButton.test.tsx:181:20)\n    at Generator.next (<anonymous>)\n    at asyncGeneratorStep (/workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)\n    at _next (/workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)\n    at /workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7\n    at new Promise (<anonymous>)\n    at Object.<anonymous> (/workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)\n    at Promise.then.completed (/workspace/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/workspace/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/workspace/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/workspace/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)\n    at run (/workspace/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/workspace/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/workspace/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"RoleBasedButton Component Basic Functionality should handle disabled prop independently of permissions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle disabled prop independently of permissions"},{"ancestorTitles":["RoleBasedButton Component","Basic Functionality"],"duration":49,"failureDetails":[{"matcherResult":{"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined\n    at Object.toBe (/workspace/src/components/role-based/__tests__/RoleBasedButton.test.tsx:209:37)\n    at Promise.then.completed (/workspace/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/workspace/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/workspace/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/workspace/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)\n    at run (/workspace/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/workspace/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/workspace/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"RoleBasedButton Component Basic Functionality should show loading state","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should show loading state"},{"ancestorTitles":["RoleBasedButton Component","Role-Based Access Control"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"RoleBasedButton Component Role-Based Access Control should allow access when user has required role","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should allow access when user has required role"},{"ancestorTitles":["RoleBasedButton Component","Role-Based Access Control"],"duration":1004,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: \"Permission Required\", \"This feature requires Administrator access\", [{\"text\": \"OK\"}]\n\nNumber of calls: 0","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: \"Permission Required\", \"This feature requires Administrator access\", [{\"text\": \"OK\"}]\n\nNumber of calls: 0\n    at Object.<anonymous> (/workspace/src/components/role-based/__tests__/RoleBasedButton.test.tsx:257:20)\n    at Generator.next (<anonymous>)\n    at asyncGeneratorStep (/workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)\n    at _next (/workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)\n    at /workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7\n    at new Promise (<anonymous>)\n    at Object.<anonymous> (/workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)\n    at Promise.then.completed (/workspace/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/workspace/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/workspace/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/workspace/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)\n    at run (/workspace/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/workspace/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/workspace/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"RoleBasedButton Component Role-Based Access Control should deny access and show message when user lacks required role","invocations":1,"location":null,"numPassingAsserts":20,"retryReasons":[],"status":"failed","title":"should deny access and show message when user lacks required role"},{"ancestorTitles":["RoleBasedButton Component","Role-Based Access Control"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"RoleBasedButton Component Role-Based Access Control should handle multiple allowed roles","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle multiple allowed roles"},{"ancestorTitles":["RoleBasedButton Component","Permission-Based Access Control"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"RoleBasedButton Component Permission-Based Access Control should allow access when user has required permission","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should allow access when user has required permission"},{"ancestorTitles":["RoleBasedButton Component","Permission-Based Access Control"],"duration":1007,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: \"Permission Required\", \"This feature requires admin:delete permission\", [{\"text\": \"OK\"}]\n\nNumber of calls: 0","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: \"Permission Required\", \"This feature requires admin:delete permission\", [{\"text\": \"OK\"}]\n\nNumber of calls: 0\n    at Object.<anonymous> (/workspace/src/components/role-based/__tests__/RoleBasedButton.test.tsx:336:20)\n    at Generator.next (<anonymous>)\n    at asyncGeneratorStep (/workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)\n    at _next (/workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)\n    at /workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7\n    at new Promise (<anonymous>)\n    at Object.<anonymous> (/workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)\n    at Promise.then.completed (/workspace/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/workspace/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/workspace/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/workspace/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)\n    at run (/workspace/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/workspace/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/workspace/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"RoleBasedButton Component Permission-Based Access Control should deny access when user lacks required permission","invocations":1,"location":null,"numPassingAsserts":20,"retryReasons":[],"status":"failed","title":"should deny access when user lacks required permission"},{"ancestorTitles":["RoleBasedButton Component","Permission-Based Access Control"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"RoleBasedButton Component Permission-Based Access Control should allow admin users to access all permissions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should allow admin users to access all permissions"},{"ancestorTitles":["RoleBasedButton Component","Screen-Based Access Control"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"RoleBasedButton Component Screen-Based Access Control should allow access when user can navigate to screen","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should allow access when user can navigate to screen"},{"ancestorTitles":["RoleBasedButton Component","Screen-Based Access Control"],"duration":1005,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: \"Permission Required\", \"You don't have access to AdminScreen\", [{\"text\": \"OK\"}]\n\nNumber of calls: 0","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: \"Permission Required\", \"You don't have access to AdminScreen\", [{\"text\": \"OK\"}]\n\nNumber of calls: 0\n    at Object.<anonymous> (/workspace/src/components/role-based/__tests__/RoleBasedButton.test.tsx:480:20)\n    at Generator.next (<anonymous>)\n    at asyncGeneratorStep (/workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)\n    at _next (/workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)\n    at /workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7\n    at new Promise (<anonymous>)\n    at Object.<anonymous> (/workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)\n    at Promise.then.completed (/workspace/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/workspace/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/workspace/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/workspace/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)\n    at run (/workspace/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/workspace/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/workspace/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"RoleBasedButton Component Screen-Based Access Control should deny access when user cannot navigate to screen","invocations":1,"location":null,"numPassingAsserts":20,"retryReasons":[],"status":"failed","title":"should deny access when user cannot navigate to screen"},{"ancestorTitles":["RoleBasedButton Component","Screen-Based Access Control"],"duration":1004,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: \"Permission Required\", \"Navigation error: Navigation service unavailable\", [{\"text\": \"OK\"}]\n\nNumber of calls: 0","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: \"Permission Required\", \"Navigation error: Navigation service unavailable\", [{\"text\": \"OK\"}]\n\nNumber of calls: 0\n    at Object.<anonymous> (/workspace/src/components/role-based/__tests__/RoleBasedButton.test.tsx:546:20)\n    at Generator.next (<anonymous>)\n    at asyncGeneratorStep (/workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)\n    at _next (/workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)\n    at /workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7\n    at new Promise (<anonymous>)\n    at Object.<anonymous> (/workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)\n    at Promise.then.completed (/workspace/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/workspace/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/workspace/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/workspace/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)\n    at run (/workspace/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/workspace/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/workspace/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"RoleBasedButton Component Screen-Based Access Control should handle navigation permission errors","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle navigation permission errors"},{"ancestorTitles":["RoleBasedButton Component","Loading States"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"RoleBasedButton Component Loading States should show checking state when user role is loading","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should show checking state when user role is loading"},{"ancestorTitles":["RoleBasedButton Component","Loading States"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"RoleBasedButton Component Loading States should show checking state when screen permissions are loading","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should show checking state when screen permissions are loading"},{"ancestorTitles":["RoleBasedButton Component","Unauthenticated Users"],"duration":1004,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: \"Permission Required\", \"Please log in to access this feature\", [{\"text\": \"OK\"}]\n\nNumber of calls: 0","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: \"Permission Required\", \"Please log in to access this feature\", [{\"text\": \"OK\"}]\n\nNumber of calls: 0\n    at Object.<anonymous> (/workspace/src/components/role-based/__tests__/RoleBasedButton.test.tsx:619:20)\n    at Generator.next (<anonymous>)\n    at asyncGeneratorStep (/workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)\n    at _next (/workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)\n    at /workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7\n    at new Promise (<anonymous>)\n    at Object.<anonymous> (/workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)\n    at Promise.then.completed (/workspace/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/workspace/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/workspace/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/workspace/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)\n    at run (/workspace/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/workspace/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/workspace/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"RoleBasedButton Component Unauthenticated Users should deny access for unauthenticated users","invocations":1,"location":null,"numPassingAsserts":20,"retryReasons":[],"status":"failed","title":"should deny access for unauthenticated users"},{"ancestorTitles":["RoleBasedButton Component","Custom Messages and Styling"],"duration":1004,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: \"Permission Required\", \"You need admin access for this action\", [{\"text\": \"OK\"}]\n\nNumber of calls: 0","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: \"Permission Required\", \"You need admin access for this action\", [{\"text\": \"OK\"}]\n\nNumber of calls: 0\n    at Object.<anonymous> (/workspace/src/components/role-based/__tests__/RoleBasedButton.test.tsx:646:20)\n    at Generator.next (<anonymous>)\n    at asyncGeneratorStep (/workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)\n    at _next (/workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)\n    at /workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7\n    at new Promise (<anonymous>)\n    at Object.<anonymous> (/workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)\n    at Promise.then.completed (/workspace/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/workspace/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/workspace/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/workspace/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)\n    at run (/workspace/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/workspace/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/workspace/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"RoleBasedButton Component Custom Messages and Styling should use custom permission message","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should use custom permission message"},{"ancestorTitles":["RoleBasedButton Component","Custom Messages and Styling"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"RoleBasedButton Component Custom Messages and Styling should not show permission message when showPermissionMessage is false","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should not show permission message when showPermissionMessage is false"},{"ancestorTitles":["RoleBasedButton Component","Custom Messages and Styling"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"RoleBasedButton Component Custom Messages and Styling should apply custom disabled style","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should apply custom disabled style"},{"ancestorTitles":["RoleBasedButton Component","Hide When Denied"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"RoleBasedButton Component Hide When Denied should hide button when hideWhenDenied is true and permission denied","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should hide button when hideWhenDenied is true and permission denied"},{"ancestorTitles":["RoleBasedButton Component","Hide When Denied"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"RoleBasedButton Component Hide When Denied should show button when hideWhenDenied is true but user has permission","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should show button when hideWhenDenied is true but user has permission"},{"ancestorTitles":["RoleBasedButton Component","Hide When Denied"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"RoleBasedButton Component Hide When Denied should show button in loading state even when hideWhenDenied is true","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should show button in loading state even when hideWhenDenied is true"},{"ancestorTitles":["RoleBasedButton Component","Complex Permission Scenarios"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"RoleBasedButton Component Complex Permission Scenarios should handle multiple permission types","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle multiple permission types"},{"ancestorTitles":["RoleBasedButton Component","Complex Permission Scenarios"],"duration":1006,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalled()\n\nExpected number of calls: >= 1\nReceived number of calls:    0","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalled()\n\nExpected number of calls: >= 1\nReceived number of calls:    0\n    at Object.<anonymous> (/workspace/src/components/role-based/__tests__/RoleBasedButton.test.tsx:835:20)\n    at Generator.next (<anonymous>)\n    at asyncGeneratorStep (/workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)\n    at _next (/workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)\n    at /workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7\n    at new Promise (<anonymous>)\n    at Object.<anonymous> (/workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)\n    at Promise.then.completed (/workspace/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/workspace/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/workspace/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/workspace/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/workspace/node_modules/jest-circus/build/run.js:121:9)\n    at run (/workspace/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/workspace/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/workspace/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/workspace/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"RoleBasedButton Component Complex Permission Scenarios should deny when any permission check fails","invocations":1,"location":null,"numPassingAsserts":20,"retryReasons":[],"status":"failed","title":"should deny when any permission check fails"}],"endTime":1756381257189,"message":"  ● RoleBasedButton Component › Basic Functionality › should handle disabled prop independently of permissions\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: undefined\n\n      179 |       );\n      180 |\n    > 181 |       await waitFor(() => {\n          |                    ^\n      182 |         const button = getByTestId('test-button');\n      183 |         \n      184 |         // Verify button is disabled\n\n      at Object.<anonymous> (src/components/role-based/__tests__/RoleBasedButton.test.tsx:181:20)\n      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)\n      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)\n      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7\n      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)\n\n  ● RoleBasedButton Component › Basic Functionality › should show loading state\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: undefined\n\n      207 |       const button = getByTestId('test-button');\n      208 |       expect(button).toBeTruthy();\n    > 209 |       expect(button.props.disabled).toBe(true); // Button is disabled when loading\n          |                                     ^\n      210 |     });\n      211 |   });\n      212 |\n\n      at Object.toBe (src/components/role-based/__tests__/RoleBasedButton.test.tsx:209:37)\n\n  ● RoleBasedButton Component › Role-Based Access Control › should deny access and show message when user lacks required role\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    Expected: \"Permission Required\", \"This feature requires Administrator access\", [{\"text\": \"OK\"}]\n\n    Number of calls: 0\n\n      255 |       fireEvent.press(button);\n      256 |\n    > 257 |       await waitFor(() => {\n          |                    ^\n      258 |         expect(mockOnPress).not.toHaveBeenCalled();\n      259 |         expect(mockAlert).toHaveBeenCalledWith(\n      260 |           'Permission Required',\n\n      at Object.<anonymous> (src/components/role-based/__tests__/RoleBasedButton.test.tsx:257:20)\n      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)\n      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)\n      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7\n      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)\n\n  ● RoleBasedButton Component › Permission-Based Access Control › should deny access when user lacks required permission\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    Expected: \"Permission Required\", \"This feature requires admin:delete permission\", [{\"text\": \"OK\"}]\n\n    Number of calls: 0\n\n      334 |       fireEvent.press(button);\n      335 |\n    > 336 |       await waitFor(() => {\n          |                    ^\n      337 |         expect(mockOnPress).not.toHaveBeenCalled();\n      338 |         expect(mockAlert).toHaveBeenCalledWith(\n      339 |           'Permission Required',\n\n      at Object.<anonymous> (src/components/role-based/__tests__/RoleBasedButton.test.tsx:336:20)\n      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)\n      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)\n      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7\n      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)\n\n  ● RoleBasedButton Component › Screen-Based Access Control › should deny access when user cannot navigate to screen\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    Expected: \"Permission Required\", \"You don't have access to AdminScreen\", [{\"text\": \"OK\"}]\n\n    Number of calls: 0\n\n      478 |       fireEvent.press(button);\n      479 |\n    > 480 |       await waitFor(() => {\n          |                    ^\n      481 |         expect(mockOnPress).not.toHaveBeenCalled();\n      482 |         expect(mockAlert).toHaveBeenCalledWith(\n      483 |           'Permission Required',\n\n      at Object.<anonymous> (src/components/role-based/__tests__/RoleBasedButton.test.tsx:480:20)\n      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)\n      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)\n      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7\n      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)\n\n  ● RoleBasedButton Component › Screen-Based Access Control › should handle navigation permission errors\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    Expected: \"Permission Required\", \"Navigation error: Navigation service unavailable\", [{\"text\": \"OK\"}]\n\n    Number of calls: 0\n\n      544 |       fireEvent.press(button);\n      545 |\n    > 546 |       await waitFor(() => {\n          |                    ^\n      547 |         expect(mockAlert).toHaveBeenCalledWith(\n      548 |           'Permission Required',\n      549 |           'Navigation error: Navigation service unavailable',\n\n      at Object.<anonymous> (src/components/role-based/__tests__/RoleBasedButton.test.tsx:546:20)\n      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)\n      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)\n      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7\n      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)\n\n  ● RoleBasedButton Component › Unauthenticated Users › should deny access for unauthenticated users\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    Expected: \"Permission Required\", \"Please log in to access this feature\", [{\"text\": \"OK\"}]\n\n    Number of calls: 0\n\n      617 |       fireEvent.press(button);\n      618 |\n    > 619 |       await waitFor(() => {\n          |                    ^\n      620 |         expect(mockOnPress).not.toHaveBeenCalled();\n      621 |         expect(mockAlert).toHaveBeenCalledWith(\n      622 |           'Permission Required',\n\n      at Object.<anonymous> (src/components/role-based/__tests__/RoleBasedButton.test.tsx:619:20)\n      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)\n      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)\n      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7\n      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)\n\n  ● RoleBasedButton Component › Custom Messages and Styling › should use custom permission message\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    Expected: \"Permission Required\", \"You need admin access for this action\", [{\"text\": \"OK\"}]\n\n    Number of calls: 0\n\n      644 |       fireEvent.press(button);\n      645 |\n    > 646 |       await waitFor(() => {\n          |                    ^\n      647 |         expect(mockAlert).toHaveBeenCalledWith(\n      648 |           'Permission Required',\n      649 |           'You need admin access for this action',\n\n      at Object.<anonymous> (src/components/role-based/__tests__/RoleBasedButton.test.tsx:646:20)\n      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)\n      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)\n      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7\n      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)\n\n  ● RoleBasedButton Component › Complex Permission Scenarios › should deny when any permission check fails\n\n    expect(jest.fn()).toHaveBeenCalled()\n\n    Expected number of calls: >= 1\n    Received number of calls:    0\n\n      833 |       fireEvent.press(button);\n      834 |\n    > 835 |       await waitFor(() => {\n          |                    ^\n      836 |         expect(mockOnPress).not.toHaveBeenCalled();\n      837 |         expect(mockAlert).toHaveBeenCalled();\n      838 |       });\n\n      at Object.<anonymous> (src/components/role-based/__tests__/RoleBasedButton.test.tsx:835:20)\n      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)\n      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)\n      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7\n      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)\n","name":"/workspace/src/components/role-based/__tests__/RoleBasedButton.test.tsx","startTime":1756381242597,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["AccessControlButton Component","Basic Rendering"],"duration":133,"failureDetails":[],"failureMessages":[],"fullName":"AccessControlButton Component Basic Rendering should render button with title","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should render button with title"},{"ancestorTitles":["AccessControlButton Component","Basic Rendering"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"AccessControlButton Component Basic Rendering should apply custom styles","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should apply custom styles"},{"ancestorTitles":["AccessControlButton Component","Basic Rendering"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"AccessControlButton Component Basic Rendering should show custom icon when provided","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should show custom icon when provided"},{"ancestorTitles":["AccessControlButton Component","Permission Checking"],"duration":111,"failureDetails":[],"failureMessages":[],"fullName":"AccessControlButton Component Permission Checking should allow access when user has required role","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should allow access when user has required role"},{"ancestorTitles":["AccessControlButton Component","Permission Checking"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"AccessControlButton Component Permission Checking should deny access when user lacks required role","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should deny access when user lacks required role"},{"ancestorTitles":["AccessControlButton Component","Permission Checking"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"AccessControlButton Component Permission Checking should check multiple permissions with AND logic","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should check multiple permissions with AND logic"},{"ancestorTitles":["AccessControlButton Component","Permission Checking"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"AccessControlButton Component Permission Checking should check multiple permissions with OR logic","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should check multiple permissions with OR logic"},{"ancestorTitles":["AccessControlButton Component","Loading States"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"AccessControlButton Component Loading States should show loading state when checking permissions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should show loading state when checking permissions"},{"ancestorTitles":["AccessControlButton Component","Loading States"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"AccessControlButton Component Loading States should show custom loading text","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should show custom loading text"},{"ancestorTitles":["AccessControlButton Component","Loading States"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"AccessControlButton Component Loading States should disable button during external loading","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should disable button during external loading"},{"ancestorTitles":["AccessControlButton Component","Visual Feedback"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"AccessControlButton Component Visual Feedback should apply denied style when permissions are denied","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should apply denied style when permissions are denied"},{"ancestorTitles":["AccessControlButton Component","Visual Feedback"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"AccessControlButton Component Visual Feedback should hide button when hideWhenDenied is true","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should hide button when hideWhenDenied is true"},{"ancestorTitles":["AccessControlButton Component","Visual Feedback"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"AccessControlButton Component Visual Feedback should show lock icon when access is denied","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should show lock icon when access is denied"},{"ancestorTitles":["AccessControlButton Component","Custom Permission Messages"],"duration":5,"failureDetails":[{}],"failureMessages":["Error: expect(received).toHaveBeenCalledWith(...expected)\n\nMatcher error: received value must be a mock or spy function\n\nReceived has type:  function\nReceived has value: [Function alert]\n    at Object.toHaveBeenCalledWith (/workspace/src/components/role-based/__tests__/AccessControlButton.test.tsx:385:27)\n    at Generator.next (<anonymous>)\n    at asyncGeneratorStep (/workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)\n    at _next (/workspace/node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)"],"fullName":"AccessControlButton Component Custom Permission Messages should show custom permission message","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should show custom permission message"},{"ancestorTitles":["AccessControlButton Component","Custom Permission Messages"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"AccessControlButton Component Custom Permission Messages should show tooltip with permission requirements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should show tooltip with permission requirements"},{"ancestorTitles":["AccessControlButton Component","Async Operations"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"AccessControlButton Component Async Operations should handle async onPress with loading state","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle async onPress with loading state"},{"ancestorTitles":["AccessControlButton Component","Async Operations"],"duration":56,"failureDetails":[],"failureMessages":[],"fullName":"AccessControlButton Component Async Operations should handle async operation errors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle async operation errors"},{"ancestorTitles":["AccessControlButton Component","Admin Override"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"AccessControlButton Component Admin Override should always grant access to admin users","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should always grant access to admin users"},{"ancestorTitles":["AccessControlButton Component","Accessibility"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"AccessControlButton Component Accessibility should provide accessibility label","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide accessibility label"},{"ancestorTitles":["AccessControlButton Component","Accessibility"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"AccessControlButton Component Accessibility should indicate disabled state in accessibility","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should indicate disabled state in accessibility"}],"endTime":1756381258745,"message":"  ● AccessControlButton Component › Custom Permission Messages › should show custom permission message\n\n    expect(received).toHaveBeenCalledWith(...expected)\n\n    Matcher error: received value must be a mock or spy function\n\n    Received has type:  function\n    Received has value: [Function alert]\n\n      383 |       fireEvent.press(button);\n      384 |\n    > 385 |       expect(Alert.alert).toHaveBeenCalledWith(\n          |                           ^\n      386 |         'Access Denied',\n      387 |         'Administrator privileges required',\n      388 |         [{ text: 'OK' }]\n\n      at Object.toHaveBeenCalledWith (src/components/role-based/__tests__/AccessControlButton.test.tsx:385:27)\n      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)\n      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)\n","name":"/workspace/src/components/role-based/__tests__/AccessControlButton.test.tsx","startTime":1756381257243,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["PermissionBadge Component","Basic Rendering"],"duration":22,"failureDetails":[],"failureMessages":[],"fullName":"PermissionBadge Component Basic Rendering should render permission granted badge","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should render permission granted badge"},{"ancestorTitles":["PermissionBadge Component","Basic Rendering"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"PermissionBadge Component Basic Rendering should render permission denied badge","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should render permission denied badge"},{"ancestorTitles":["PermissionBadge Component","Basic Rendering"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PermissionBadge Component Basic Rendering should show permission label when showLabel is true","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should show permission label when showLabel is true"},{"ancestorTitles":["PermissionBadge Component","Basic Rendering"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PermissionBadge Component Basic Rendering should hide when hideWhenGranted is true and permission is granted","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should hide when hideWhenGranted is true and permission is granted"},{"ancestorTitles":["PermissionBadge Component","Basic Rendering"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PermissionBadge Component Basic Rendering should hide when hideWhenDenied is true and permission is denied","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should hide when hideWhenDenied is true and permission is denied"},{"ancestorTitles":["PermissionBadge Component","Role-Based Permissions"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"PermissionBadge Component Role-Based Permissions should show granted for admin with any permission","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should show granted for admin with any permission"},{"ancestorTitles":["PermissionBadge Component","Role-Based Permissions"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"PermissionBadge Component Role-Based Permissions should show granted for staff with inventory permissions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should show granted for staff with inventory permissions"},{"ancestorTitles":["PermissionBadge Component","Role-Based Permissions"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PermissionBadge Component Role-Based Permissions should show denied for customer with admin permissions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should show denied for customer with admin permissions"},{"ancestorTitles":["PermissionBadge Component","Visual Variants"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PermissionBadge Component Visual Variants should render minimal variant","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should render minimal variant"},{"ancestorTitles":["PermissionBadge Component","Visual Variants"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"PermissionBadge Component Visual Variants should render detailed variant with description","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should render detailed variant with description"},{"ancestorTitles":["PermissionBadge Component","Visual Variants"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"PermissionBadge Component Visual Variants should render icon-only variant","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should render icon-only variant"},{"ancestorTitles":["PermissionBadge Component","Custom Styling"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"PermissionBadge Component Custom Styling should apply custom granted style","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should apply custom granted style"},{"ancestorTitles":["PermissionBadge Component","Custom Styling"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"PermissionBadge Component Custom Styling should apply custom denied style","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should apply custom denied style"},{"ancestorTitles":["PermissionBadge Component","Custom Styling"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"PermissionBadge Component Custom Styling should apply custom text style","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should apply custom text style"},{"ancestorTitles":["PermissionBadge Component","Loading States"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"PermissionBadge Component Loading States should show loading state when checking permissions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should show loading state when checking permissions"},{"ancestorTitles":["PermissionBadge Component","Loading States"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PermissionBadge Component Loading States should not render when loading and hideWhenLoading is true","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should not render when loading and hideWhenLoading is true"},{"ancestorTitles":["PermissionBadge Component","Unauthenticated Users"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PermissionBadge Component Unauthenticated Users should show denied for unauthenticated users","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should show denied for unauthenticated users"},{"ancestorTitles":["PermissionBadge Component","Multiple Permissions"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"PermissionBadge Component Multiple Permissions should check multiple permissions with AND logic","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should check multiple permissions with AND logic"},{"ancestorTitles":["PermissionBadge Component","Multiple Permissions"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PermissionBadge Component Multiple Permissions should check multiple permissions with OR logic","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should check multiple permissions with OR logic"}],"endTime":1756381259229,"message":"","name":"/workspace/src/components/role-based/__tests__/PermissionBadge.test.tsx","startTime":1756381258759,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["RoleIndicator Component","Loading State"],"duration":26,"failureDetails":[],"failureMessages":[],"fullName":"RoleIndicator Component Loading State should show loading state when user role is loading","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should show loading state when user role is loading"},{"ancestorTitles":["RoleIndicator Component","Error States"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"RoleIndicator Component Error States should show No Role when user data is not available","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should show No Role when user data is not available"},{"ancestorTitles":["RoleIndicator Component","Error States"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"RoleIndicator Component Error States should show Unknown for unrecognized role","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should show Unknown for unrecognized role"},{"ancestorTitles":["RoleIndicator Component","Role Display"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"RoleIndicator Component Role Display should display customer role with icon and title","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should display customer role with icon and title"},{"ancestorTitles":["RoleIndicator Component","Role Display"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"RoleIndicator Component Role Display should display farmer role with correct styling","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should display farmer role with correct styling"},{"ancestorTitles":["RoleIndicator Component","Role Display"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"RoleIndicator Component Role Display should display vendor role","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should display vendor role"},{"ancestorTitles":["RoleIndicator Component","Role Display"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"RoleIndicator Component Role Display should display admin role","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should display admin role"},{"ancestorTitles":["RoleIndicator Component","Role Display"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"RoleIndicator Component Role Display should display staff role","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should display staff role"},{"ancestorTitles":["RoleIndicator Component","Size Variants"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"RoleIndicator Component Size Variants should render small size variant","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should render small size variant"},{"ancestorTitles":["RoleIndicator Component","Size Variants"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"RoleIndicator Component Size Variants should render medium size variant by default","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should render medium size variant by default"},{"ancestorTitles":["RoleIndicator Component","Size Variants"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"RoleIndicator Component Size Variants should render large size variant","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should render large size variant"},{"ancestorTitles":["RoleIndicator Component","Display Variants"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RoleIndicator Component Display Variants should render badge variant by default","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should render badge variant by default"},{"ancestorTitles":["RoleIndicator Component","Display Variants"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RoleIndicator Component Display Variants should render chip variant","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should render chip variant"},{"ancestorTitles":["RoleIndicator Component","Display Variants"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RoleIndicator Component Display Variants should render minimal variant","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should render minimal variant"},{"ancestorTitles":["RoleIndicator Component","Icon and Title Options"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RoleIndicator Component Icon and Title Options should hide icon when showIcon is false","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should hide icon when showIcon is false"},{"ancestorTitles":["RoleIndicator Component","Icon and Title Options"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"RoleIndicator Component Icon and Title Options should hide title when showTitle is false","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should hide title when showTitle is false"},{"ancestorTitles":["RoleIndicator Component","Icon and Title Options"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RoleIndicator Component Icon and Title Options should show only icon when both showIcon and showTitle are set","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should show only icon when both showIcon and showTitle are set"},{"ancestorTitles":["RoleIndicator Component","Custom Styling"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"RoleIndicator Component Custom Styling should apply custom container style","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should apply custom container style"},{"ancestorTitles":["RoleIndicator Component","Custom Styling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RoleIndicator Component Custom Styling should apply custom text style","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should apply custom text style"},{"ancestorTitles":["RoleIndicator Component","Test ID Support"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"RoleIndicator Component Test ID Support should use custom testID when provided","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should use custom testID when provided"},{"ancestorTitles":["RoleIndicator Component","Edge Cases"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"RoleIndicator Component Edge Cases should handle role change dynamically","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle role change dynamically"},{"ancestorTitles":["RoleIndicator Component","Edge Cases"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"RoleIndicator Component Edge Cases should handle all role combinations","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should handle all role combinations"}],"endTime":1756381259759,"message":"","name":"/workspace/src/components/role-based/__tests__/RoleIndicator.test.tsx","startTime":1756381259242,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["RoleBasedVisibility Component","Allowed Roles"],"duration":73,"failureDetails":[],"failureMessages":[],"fullName":"RoleBasedVisibility Component Allowed Roles should show content when user has allowed role","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should show content when user has allowed role"},{"ancestorTitles":["RoleBasedVisibility Component","Allowed Roles"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"RoleBasedVisibility Component Allowed Roles should hide content when user lacks allowed role","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should hide content when user lacks allowed role"},{"ancestorTitles":["RoleBasedVisibility Component","Allowed Roles"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RoleBasedVisibility Component Allowed Roles should show content to admin when admin is in allowed roles","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should show content to admin when admin is in allowed roles"},{"ancestorTitles":["RoleBasedVisibility Component","Denied Roles"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RoleBasedVisibility Component Denied Roles should hide content when user has denied role","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should hide content when user has denied role"},{"ancestorTitles":["RoleBasedVisibility Component","Denied Roles"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RoleBasedVisibility Component Denied Roles should show content when user lacks denied role","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should show content when user lacks denied role"},{"ancestorTitles":["RoleBasedVisibility Component","Denied Roles"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RoleBasedVisibility Component Denied Roles should prioritize denied roles over allowed roles","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should prioritize denied roles over allowed roles"},{"ancestorTitles":["RoleBasedVisibility Component","Loading States"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"RoleBasedVisibility Component Loading States should hide content while loading by default","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should hide content while loading by default"},{"ancestorTitles":["RoleBasedVisibility Component","Loading States"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"RoleBasedVisibility Component Loading States should show content while loading when showWhileLoading is true","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should show content while loading when showWhileLoading is true"},{"ancestorTitles":["RoleBasedVisibility Component","Unauthenticated Users"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RoleBasedVisibility Component Unauthenticated Users should hide content for unauthenticated users by default","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should hide content for unauthenticated users by default"},{"ancestorTitles":["RoleBasedVisibility Component","Unauthenticated Users"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RoleBasedVisibility Component Unauthenticated Users should show content to unauthenticated users when showWhenUnauthenticated is true","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should show content to unauthenticated users when showWhenUnauthenticated is true"},{"ancestorTitles":["RoleBasedVisibility Component","Combined Scenarios"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"RoleBasedVisibility Component Combined Scenarios should show content when no roles specified","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should show content when no roles specified"},{"ancestorTitles":["RoleBasedVisibility Component","Combined Scenarios"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RoleBasedVisibility Component Combined Scenarios should handle multiple allowed roles correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle multiple allowed roles correctly"},{"ancestorTitles":["RoleBasedVisibility Component","Combined Scenarios"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RoleBasedVisibility Component Combined Scenarios should handle error states gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle error states gracefully"},{"ancestorTitles":["RoleBasedVisibility Component","Combined Scenarios"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"RoleBasedVisibility Component Combined Scenarios should track visibility decisions for monitoring","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should track visibility decisions for monitoring"},{"ancestorTitles":["RoleBasedVisibility Component","Combined Scenarios"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"RoleBasedVisibility Component Combined Scenarios should track visibility denials for monitoring","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should track visibility denials for monitoring"},{"ancestorTitles":["RoleBasedVisibility Component","Manager Role"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"RoleBasedVisibility Component Manager Role should handle manager role correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle manager role correctly"}],"endTime":1756381260299,"message":"","name":"/workspace/src/components/role-based/__tests__/RoleBasedVisibility.test.tsx","startTime":1756381259771,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["PermissionGate Component","Loading States"],"duration":24,"failureDetails":[],"failureMessages":[],"fullName":"PermissionGate Component Loading States should show loading state when user role is loading","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should show loading state when user role is loading"},{"ancestorTitles":["PermissionGate Component","Loading States"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"PermissionGate Component Loading States should show loading state when screen permissions are being checked","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should show loading state when screen permissions are being checked"},{"ancestorTitles":["PermissionGate Component","Loading States"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PermissionGate Component Loading States should use custom loading component when provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use custom loading component when provided"},{"ancestorTitles":["PermissionGate Component","Loading States"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"PermissionGate Component Loading States should not show loading when showLoading is false","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should not show loading when showLoading is false"},{"ancestorTitles":["PermissionGate Component","Permission Checks"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"PermissionGate Component Permission Checks should grant access when user has required role","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should grant access when user has required role"},{"ancestorTitles":["PermissionGate Component","Permission Checks"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"PermissionGate Component Permission Checks should deny access when user lacks required role","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should deny access when user lacks required role"},{"ancestorTitles":["PermissionGate Component","Permission Checks"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"PermissionGate Component Permission Checks should grant access when user has required permissions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should grant access when user has required permissions"},{"ancestorTitles":["PermissionGate Component","Permission Checks"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"PermissionGate Component Permission Checks should deny access when user lacks required permissions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should deny access when user lacks required permissions"},{"ancestorTitles":["PermissionGate Component","Permission Checks"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"PermissionGate Component Permission Checks should check screen access permissions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should check screen access permissions"},{"ancestorTitles":["PermissionGate Component","Permission Checks"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"PermissionGate Component Permission Checks should deny access when screen permission denied","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should deny access when screen permission denied"},{"ancestorTitles":["PermissionGate Component","Permission Checks"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"PermissionGate Component Permission Checks should handle screen permission errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle screen permission errors"},{"ancestorTitles":["PermissionGate Component","Unauthenticated Users"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"PermissionGate Component Unauthenticated Users should deny access for unauthenticated users","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should deny access for unauthenticated users"},{"ancestorTitles":["PermissionGate Component","Inversion Logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"PermissionGate Component Inversion Logic should invert permission check when invert=true","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should invert permission check when invert=true"},{"ancestorTitles":["PermissionGate Component","Inversion Logic"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"PermissionGate Component Inversion Logic should deny access when invert=true and user has role","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should deny access when invert=true and user has role"},{"ancestorTitles":["PermissionGate Component","Fallback Handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PermissionGate Component Fallback Handling should render custom fallback component","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should render custom fallback component"},{"ancestorTitles":["PermissionGate Component","Fallback Handling"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"PermissionGate Component Fallback Handling should render fallback function component with reason","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should render fallback function component with reason"},{"ancestorTitles":["PermissionGate Component","Fallback Handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"PermissionGate Component Fallback Handling should render nothing when fallback is null","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should render nothing when fallback is null"},{"ancestorTitles":["PermissionGate Component","Combined Permission Checks"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"PermissionGate Component Combined Permission Checks should require both role and permission when both specified","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should require both role and permission when both specified"},{"ancestorTitles":["PermissionGate Component","Combined Permission Checks"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"PermissionGate Component Combined Permission Checks should deny when role matches but permission missing","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should deny when role matches but permission missing"},{"ancestorTitles":["PermissionGate Component","Admin Override"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"PermissionGate Component Admin Override should grant admin users access to all permissions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should grant admin users access to all permissions"},{"ancestorTitles":["PermissionGate Component","Accessibility and Testing"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"PermissionGate Component Accessibility and Testing should provide proper test IDs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide proper test IDs"}],"endTime":1756381260800,"message":"","name":"/workspace/src/components/role-based/__tests__/PermissionGate.test.tsx","startTime":1756381260314,"status":"passed","summary":""}],"wasInterrupted":false}
