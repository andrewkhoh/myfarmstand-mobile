version: '3.8'

# Optimized TDD Multi-Agent Workflow
# Key improvements:
# 1. Shared volumes between RED and GREEN phases
# 2. Proper test file passing between agents
# 3. Sequential dependencies for TDD flow
# 4. Unified workspace structure

services:
  # ============= RED PHASE: Test Writers =============
  marketing-tests-red:
    build: 
      context: ./agents
      dockerfile: Dockerfile
    container_name: marketing-tests-red
    environment:
      - AGENT_NAME=marketing-tests-red
      - AGENT_TYPE=test-writer
      - TDD_PHASE=RED
      - PROJECT_NAME=marketing_operations
      - PROJECT_DESCRIPTION=TDD Phase - Write failing tests for marketing features
      - MAX_RESTARTS=3
      - TARGET_PASS_RATE=0  # Tests should fail in RED phase
      - TEST_COMMAND=npm run test:marketing:all
      - AGENT_PROMPT_FILE=/prompts/tdd-red-marketing.md
      - WORKSPACE_PATH=/workspace
      - SHARED_TEST_PATH=/workspace/src/__tests__
    volumes:
      # Shared workspace for all marketing agents
      - ./volumes/tdd-marketing-workspace:/workspace:rw
      - ./volumes/communication:/shared:rw
      - ./agents/prompts:/prompts:ro
      - ./agents/tdd-entrypoint-optimized.sh:/usr/local/bin/entrypoint.sh:ro
      - ~/.claude:/home/agent/.claude:rw
    working_dir: /workspace
    entrypoint: ["/usr/local/bin/entrypoint.sh"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "test", "-f", "/shared/handoffs/marketing-tests-red-complete.md"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ============= GREEN PHASE: Implementers =============
  marketing-impl-green:
    build: 
      context: ./agents
      dockerfile: Dockerfile
    container_name: marketing-impl-green
    environment:
      - AGENT_NAME=marketing-impl-green
      - AGENT_TYPE=implementer
      - TDD_PHASE=GREEN
      - PROJECT_NAME=marketing_operations
      - PROJECT_DESCRIPTION=TDD Phase - Implement code to make tests pass
      - MAX_RESTARTS=5
      - TARGET_PASS_RATE=85
      - TEST_COMMAND=npm run test:marketing:all
      - AGENT_PROMPT_FILE=/prompts/tdd-green-marketing.md
      - DEPENDS_ON=marketing-tests-red
      - WORKSPACE_PATH=/workspace
      - SHARED_TEST_PATH=/workspace/src/__tests__
    volumes:
      # SAME workspace as RED phase - can see test files!
      - ./volumes/tdd-marketing-workspace:/workspace:rw
      - ./volumes/communication:/shared:rw
      - ./agents/prompts:/prompts:ro
      - ./agents/tdd-entrypoint-optimized.sh:/usr/local/bin/entrypoint.sh:ro
      - ~/.claude:/home/agent/.claude:rw
    working_dir: /workspace
    entrypoint: ["/usr/local/bin/entrypoint.sh"]
    restart: unless-stopped
    depends_on:
      marketing-tests-red:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "test", "-f", "/shared/handoffs/marketing-impl-green-complete.md"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ============= REFACTOR PHASE: Code Quality =============
  marketing-refactor-blue:
    build: 
      context: ./agents
      dockerfile: Dockerfile
    container_name: marketing-refactor-blue
    environment:
      - AGENT_NAME=marketing-refactor-blue
      - AGENT_TYPE=refactor
      - TDD_PHASE=REFACTOR
      - PROJECT_NAME=marketing_operations
      - PROJECT_DESCRIPTION=TDD Phase - Refactor code while keeping tests green
      - MAX_RESTARTS=3
      - TARGET_PASS_RATE=85  # Must maintain passing tests
      - TEST_COMMAND=npm run test:marketing:all
      - AGENT_PROMPT_FILE=/prompts/tdd-refactor-marketing.md
      - DEPENDS_ON=marketing-impl-green
      - WORKSPACE_PATH=/workspace
      - LINT_COMMAND=npm run lint
      - TYPECHECK_COMMAND=npm run typecheck
    volumes:
      # SAME workspace - can refactor existing code
      - ./volumes/tdd-marketing-workspace:/workspace:rw
      - ./volumes/communication:/shared:rw
      - ./agents/prompts:/prompts:ro
      - ./agents/tdd-entrypoint-optimized.sh:/usr/local/bin/entrypoint.sh:ro
      - ~/.claude:/home/agent/.claude:rw
    working_dir: /workspace
    entrypoint: ["/usr/local/bin/entrypoint.sh"]
    restart: unless-stopped
    depends_on:
      marketing-impl-green:
        condition: service_healthy

  # ============= Layer-Based Agents (Alternative Approach) =============
  # Schema Layer (shared workspace)
  schema-tdd:
    build: 
      context: ./agents
      dockerfile: Dockerfile
    container_name: schema-tdd
    environment:
      - AGENT_NAME=schema-tdd
      - AGENT_TYPE=full-tdd
      - PROJECT_NAME=marketing_operations
      - PROJECT_DESCRIPTION=Schema layer - Complete TDD cycle
      - MAX_RESTARTS=5
      - TARGET_PASS_RATE=85
      - TEST_COMMAND=npm run test:schemas:marketing
      - AGENT_PROMPT_FILE=/prompts/tdd-schema-marketing.md
      - TDD_MODE=integrated  # Does RED, GREEN, REFACTOR in one agent
    volumes:
      - ./volumes/tdd-marketing-workspace:/workspace:rw
      - ./volumes/communication:/shared:rw
      - ./agents/prompts:/prompts:ro
      - ./agents/tdd-entrypoint-optimized.sh:/usr/local/bin/entrypoint.sh:ro
      - ~/.claude:/home/agent/.claude:rw
    working_dir: /workspace
    entrypoint: ["/usr/local/bin/entrypoint.sh"]
    restart: unless-stopped

  # Service Layer (depends on schema)
  service-tdd:
    build: 
      context: ./agents
      dockerfile: Dockerfile
    container_name: service-tdd
    environment:
      - AGENT_NAME=service-tdd
      - AGENT_TYPE=full-tdd
      - PROJECT_NAME=marketing_operations
      - PROJECT_DESCRIPTION=Service layer - Complete TDD cycle
      - MAX_RESTARTS=5
      - TARGET_PASS_RATE=85
      - TEST_COMMAND=npm run test:services:marketing
      - AGENT_PROMPT_FILE=/prompts/tdd-service-marketing.md
      - DEPENDS_ON=schema-tdd
      - TDD_MODE=integrated
    volumes:
      - ./volumes/tdd-marketing-workspace:/workspace:rw
      - ./volumes/communication:/shared:rw
      - ./agents/prompts:/prompts:ro
      - ./agents/tdd-entrypoint-optimized.sh:/usr/local/bin/entrypoint.sh:ro
      - ~/.claude:/home/agent/.claude:rw
    working_dir: /workspace
    entrypoint: ["/usr/local/bin/entrypoint.sh"]
    restart: unless-stopped
    depends_on:
      - schema-tdd

  # Monitoring service
  tdd-monitoring:
    build:
      context: ./monitoring
      dockerfile: Dockerfile
    container_name: tdd-monitoring
    environment:
      - PORT=3004
      - PROJECT=tdd_optimized
      - MONITOR_MODE=tdd
    volumes:
      - ./volumes/communication:/shared:ro
      - ./volumes/tdd-marketing-workspace:/workspace:ro
      - ./monitoring/tdd-analyzer.sh:/app/analyzer.sh:ro
    ports:
      - "3004:3004"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3004/health"]
      interval: 30s
      timeout: 10s
      retries: 3

# Networks and volumes
networks:
  default:
    name: tdd-optimized-network

volumes:
  tdd-marketing-workspace:
    driver: local