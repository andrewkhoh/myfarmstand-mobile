{
  "goldenPattern": {
    "service": "src/services/cartService.ts",
    "name": "CartService",
    "description": "Gold standard service with robust error handling, broadcast integration, and React Query compatibility"
  },
  "servicesToAudit": [
    "src/services/orderService.ts",
    "src/services/productService.ts",
    "src/services/notificationService.ts",
    "src/services/pickupReschedulingService.ts",
    "src/services/noShowHandlingService.ts"
  ],
  "hooksToAudit": [
    "src/hooks/useOrders.ts",
    "src/hooks/useProducts.ts",
    "src/hooks/useCart.ts",
    "src/hooks/usePickupRescheduling.ts",
    "src/hooks/useNoShowHandling.ts"
  ],
  "database": {
    "schemaFile": "database/schema.sql",
    "inspectorFile": "database/schema_inspector.sql",
    "migrationDir": "supabase/migrations"
  },
  "patterns": {
    "requiredMethods": [
      "robust_error_handling",
      "broadcast_integration",
      "react_query_compatibility",
      "consistent_return_format",
      "proper_logging"
    ],
    "hookPatterns": [
      "consistent_query_keys",
      "optimistic_updates",
      "error_handling",
      "loading_states",
      "cache_invalidation"
    ]
  },
  "testGeneration": {
    "unitTests": true,
    "integrationTests": true,
    "testDir": "src/tests/generated",
    "mockPatterns": true,
    "coverageThreshold": 80
  },
  "fixGeneration": {
    "autoApply": false,
    "generatePatches": true,
    "backupOriginals": true,
    "patchDir": "automation/patches"
  },
  "reporting": {
    "outputDir": "automation/reports",
    "formats": ["json", "markdown", "html"],
    "includeMetrics": true,
    "generateSummary": true
  }
}
